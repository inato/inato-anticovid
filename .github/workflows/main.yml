name: CI

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
      - uses: actions/setup-node@master
        name: Setup node
        with:
          node-version: "10.x"
      - uses: actions/cache@v1
        name: Cache app dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-app-v1.2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-app-v1.2-
      - run: yarn install --frozen-lockfile --prefer-offline
        name: Install app dependencies
        env:
          CYPRESS_CACHE_FOLDER: node_modules/cypress_bin
      - run: yarn lint
        name: Lint app
      - run: yarn build
        name: Build app
      - run: yarn test --watchAll=false --passWithNoTests
        name: Test app
      - uses: actions/cache@v1
        name: Cache functions dependencies
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-functions-v1.0-${{ hashFiles('functions/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-functions-v1.0-
      - run: yarn install --frozen-lockfile --prefer-offline
        name: Install functions dependencies
        working-directory: functions
      - run: yarn lint
        name: Lint functions
        working-directory: functions
      - run: yarn build
        name: Build functions
        working-directory: functions
      - run: yarn test
        name: Test functions
        working-directory: functions
      - name: E2E tests
        run: |
          yarn serve -s build -p 3000 &
          yarn wait-on "http://localhost:3000"
          yarn cypress run
        env:
          CYPRESS_CACHE_FOLDER: node_modules/cypress_bin
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
      - uses: actions/setup-node@master
        name: Setup node
        with:
          node-version: "10.x"
      - uses: actions/cache@v1
        name: Cache app dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-app-v1.2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-app-v1.2-
      - run: yarn install --frozen-lockfile --prefer-offline
        name: Install app dependencies
      - uses: actions/cache@v1
        name: Cache functions dependencies
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-functions-v1.0-${{ hashFiles('functions/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-functions-v1.0-
      - run: yarn install --frozen-lockfile --prefer-offline
        name: Install functions dependencies
        working-directory: functions
      - if: github.ref == 'refs/heads/staging'
        name: Set staging configuration
        run: cp src/config/config.staging.json src/config/config.json
      - if: github.ref == 'refs/heads/master'
        name: Set production configuration
        run: cp src/config/config.prod.json src/config/config.json
      - run: yarn build
        name: Build the app
      - uses: w9jds/firebase-action@master
        name: Use firebase production environment
        if: github.ref == 'refs/heads/master'
        with:
          args: use production
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - uses: w9jds/firebase-action@master
        name: Use firebase staging environment
        if: github.ref == 'refs/heads/staging'
        with:
          args: use staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - uses: w9jds/firebase-action@master
        name: Deploy to firebase
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Index trials in Algolia for staging
        if: github.ref == 'refs/heads/staging'
        run: curl https://us-central1-anticovid-staging.cloudfunctions.net/refreshAlgoliaTrialIndex
      - name: Set Algolia settings for staging
        if: github.ref == 'refs/heads/staging'
        run: curl https://us-central1-anticovid-staging.cloudfunctions.net/setAlgoliaSettings
      - name: Index trials in Algolia for production
        if: github.ref == 'refs/heads/master'
        run: curl https://us-central1-anticovid.cloudfunctions.net/refreshAlgoliaTrialIndex
      - name: Set Algolia settings for production
        if: github.ref == 'refs/heads/master'
        run: curl https://us-central1-anticovid.cloudfunctions.net/setAlgoliaSettings
